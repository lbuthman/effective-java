Favor composition over inheritance

- Inheritance is safe to use within a package, where the subclasses and subclass implementations
are under the control of the same programmers.

- Unlike method invocation, inheritance violates encapsulation. A subclass depends on the
implementation details of the super class, which may change from release to release, breaking
the subclass.

- Instead of extending an existing class, give your class a private field that references an
instance of the existing class. This is known as "composition". Each instance method in the new
class invokes the corresponding method in the contained instance and returns the results. This
is known as "forwarding methods".