Minimize mutability

- An immutable class is a class whose instances cannot be modified.

- Make a class immutable following 5 rules
    1) Don't provide mutators, methods that modify the object's state
    2) Ensure classes can't be extended.
    3) Make all fields final.
    4) Make all fields private.
    5) Ensure exclusive access to any mutable components.

- A functional approach to method operations returns a new object after doing the method's
processing. This avoids the temptation to change the current object's state.

- If the documentation does not provide a precise description of the state transitions performed
by mutator methods, it can be difficult or impossible to use a mutable class reliably.

- Immutable objects are thread-safe and require no synchronization. Thus, immutable objects
can be freely shared.

- Immutable objects make great map keys and set elements.

- The only disadvantage to immutable classes is that they require a separate object for each
distinct value. This can be costlyif they are expensive to create.

- One way to create an Immutable class is with the static factory seen earlier.